// Generated by CoffeeScript 1.6.1
(function() {
  var Dialog, T,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  T = require("node-term-ui");

  Dialog = (function(_super) {

    __extends(Dialog, _super);

    function Dialog(opts) {
      Dialog.__super__.constructor.call(this, opts);
      this.botRightCorner = this.botLeftCorner = this.topRightCorner = this.topLeftCorner = T.B(3, 3, 3, 3);
      this.tabs = new T.Tabs({
        position: "bottom"
      });
    }

    Dialog.prototype.draw = function() {
      Dialog.__super__.draw.call(this);
      this.drawOptions();
      return this;
    };

    Dialog.prototype.drawBorders = function() {
      var botY, rightX;
      Dialog.__super__.drawBorders.call(this);
      T.saveFg().fg(this.borderColor);
      T.pos(this.bounds.x - 1, this.bounds.y).out(T.B(0, 3, 3, 0)).pos(this.bounds.x - 1, this.bounds.y - 1).out(T.B(0, 3, 0, 3)).pos(this.bounds.x, this.bounds.y - 1).out(T.B(3, 0, 0, 3)).pos(this.bounds.x + 1, this.bounds.y).out(T.B(3, 3, 0, 0));
      rightX = this.bounds.x + this.bounds.w - 1;
      T.pos(rightX + 1, this.bounds.y).out(T.B(3, 0, 3, 0)).pos(rightX + 1, this.bounds.y - 1).out(T.B(3, 0, 0, 3)).pos(rightX, this.bounds.y - 1).out(T.B(0, 3, 0, 3)).pos(rightX - 1, this.bounds.y).out(T.B(3, 3, 0, 0));
      botY = this.bounds.y + this.bounds.h - 1;
      T.pos(rightX + 1, botY).out(T.B(3, 0, 0, 3)).pos(rightX + 1, botY + 1).out(T.B(3, 0, 3, 0)).pos(rightX, botY + 1).out(T.B(0, 3, 3, 0)).pos(rightX - 1, botY).out(T.B(3, 3, 0, 0));
      T.pos(this.bounds.x - 1, botY).out(T.B(0, 3, 0, 3)).pos(this.bounds.x - 1, botY + 1).out(T.B(0, 3, 3, 0)).pos(this.bounds.x, botY + 1).out(T.B(3, 0, 3, 0)).pos(this.bounds.x + 1, botY).out(T.B(3, 3, 0, 0));
      return T.restoreFg();
    };

    Dialog.prototype.setOptions = function(options) {
      this.dialogOptions = options;
      return this.tabs.setItems(options);
    };

    Dialog.prototype.drawOptions = function() {
      this.tabs.x = this.bounds.x + this.bounds.w - this.tabs.width - 2;
      this.tabs.y = this.bounds.y + this.bounds.h - 1;
      T._d(this.bounds);
      return this.tabs.draw();
    };

    Dialog.prototype.focus = function() {
      Dialog.__super__.focus.call(this);
      return this.drawOptions();
    };

    Dialog.prototype.blur = function() {
      Dialog.__super__.blur.call(this);
      return this.drawOptions();
    };

    return Dialog;

  })(T.Box);

  module.exports = Dialog;

}).call(this);

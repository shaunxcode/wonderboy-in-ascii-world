// Generated by CoffeeScript 1.6.1
(function() {
  var Dialog, Mode, STATE, T, centerText, confirm, dialog, dialogs, draw, getCenterX, getCenterY, getPortionH, getPortionW, info, mode, screen, transition, _center, _portion;

  T = require("node-term-ui");

  Dialog = require("./Dialog");

  _center = function(max, len) {
    if (len == null) {
      len = 0;
    }
    return ((max / 2) - (len / 2)) + 1;
  };

  getCenterX = function(len) {
    return _center(T.width, len);
  };

  getCenterY = function(len) {
    return _center(T.height, len);
  };

  _portion = function(max, per) {
    return Math.floor(max * per);
  };

  getPortionH = function(per) {
    return _portion(T.height, per);
  };

  getPortionW = function(per) {
    return _portion(T.width, per);
  };

  centerText = function(y, text) {
    return T.pos(getCenterX(text.length), y).out(text);
  };

  dialogs = require("./dialogs");

  screen = new T.Box({
    bounds: {
      x: 2,
      y: 2
    }
  });

  info = new T.Box({
    bounds: {
      x: 2
    }
  });

  dialog = new Dialog;

  confirm = function(statement, options) {
    dialog.setBounds({
      w: 65,
      h: 10
    }).setContent(statement.split("\n"));
    return dialog.setOptions(options);
  };

  Mode = {
    titleScreen: {
      init: function() {},
      draw: function() {
        var mv;
        T.clear();
        T.hideCursor();
        mv = getCenterY();
        centerText(mv, "wonderboy-in-ascii-world");
        return centerText(mv + 1, "press any key to start");
      },
      keypress: function(char, key) {
        return transition(Mode.startGame);
      }
    },
    startGame: {
      init: function() {
        return confirm(dialogs.start, [
          [
            "egress", "Egress to Reality", function() {
              return T.quit();
            }
          ], [
            "embark", "Embark Upon Adventure", function() {
              return T.pos(1, 5).out("TALK TALK");
            }
          ]
        ]);
      },
      draw: function() {
        T.clear();
        screen.setBounds({
          x: 2,
          y: 2,
          h: getPortionH(.75),
          w: T.width - 2
        });
        info.setBounds({
          x: 2,
          y: screen.bounds.h + 2,
          h: getPortionH(.25),
          w: T.width - 2
        });
        return dialog.setBounds({
          x: getCenterX(65),
          y: getCenterY(25)
        });
      }
    },
    globe: function() {},
    overworld: function() {},
    locality: function() {},
    building: function() {}
  };

  STATE = {};

  mode = Mode.titleScreen;

  transition = function(newMode) {
    if (typeof mode.leave === "function") {
      mode.leave(STATE);
    }
    mode = newMode;
    if (typeof mode.enter === "function") {
      mode.enter(STATE);
    }
    if (typeof mode.init === "function") {
      mode.init(STATE);
    }
    return draw();
  };

  (draw = function() {
    return mode.draw(STATE);
  })();

  T.on("keypress", function(char, key) {
    return typeof mode.keypress === "function" ? mode.keypress(char, key) : void 0;
  });

  T.on("resize", draw);

}).call(this);
